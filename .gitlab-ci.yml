stages:
  - deploy
  - varnish

deploy_main:
  stage: deploy
  image: node:18-alpine
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - DEPLOY_FOLDER="/home/deploy/client-seo/main"  # Define the deployment folder based on branch
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_PROD "cd $DEPLOY_FOLDER && rm -f src/environments/environment.ts && git fetch && git checkout main && git pull && cp -f src/environments/environment.main.ts src/environments/environment.ts"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_PROD "cd $DEPLOY_FOLDER && npm install -f && npm run build:ssr"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_PROD "echo $SERVER_USER_PWD | sudo -S service nginx restart"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_PROD "/home/deploy/.npm-global/bin/pm2 restart all"
  only:
    refs:
      - main

deploy_uat:
  stage: deploy
  image: node:18-alpine
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - DEPLOY_FOLDER="/home/ub/apps/heatfleet/seo/uat"  # Define the deployment folder based on branch
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_UAT@$SERVER_IP_UAT "cd $DEPLOY_FOLDER && rm -f src/environments/environment.ts && git fetch && git checkout uat && git pull && cp -f src/environments/environment.uat.ts src/environments/environment.ts"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_UAT@$SERVER_IP_UAT "cd $DEPLOY_FOLDER && npm install -f && npm run build:ssr"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_UAT@$SERVER_IP_UAT "echo $SERVER_USER_PWD_UAT | sudo -S service nginx restart"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_UAT@$SERVER_IP_UAT "pm2 restart all"
  only:
    refs:
      - uat

deploy_dev:
  stage: deploy
  image: node:18-alpine
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - DEPLOY_FOLDER="/home/deploy/client-seo/dev"  # Define the deployment folder based on branch
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd $DEPLOY_FOLDER && rm -f src/environments/environment.ts && git fetch && git checkout dev && git pull && cp -f src/environments/environment.dev.ts src/environments/environment.ts"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd $DEPLOY_FOLDER && npm install -f && npm run build:ssr"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "echo $SERVER_USER_PWD | sudo -S service nginx restart"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "/home/deploy/.npm-global/bin/pm2 restart all"
  only:
    refs:
      - dev





varnish_main:
  stage: varnish
  image: node:18-alpine
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - SCRIPT_FOLDER="/home/deploy/script"  # Define the deployment folder based on branch
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_PROD "cd $SCRIPT_FOLDER && python3 myscript.py dynamic.txt"
    
  only:
    refs:
      - main